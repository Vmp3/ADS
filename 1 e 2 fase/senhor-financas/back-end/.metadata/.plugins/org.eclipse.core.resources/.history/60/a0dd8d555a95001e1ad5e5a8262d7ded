package model.dao;
import java.sql.Connection;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import model.vo.UsuarioVO;
import java.time.LocalDate;

public class UsuarioDAO {
	
	public UsuarioVO realizarLoginDao(UsuarioVO usuarioVo) {
		Connection conn = Banco.getConnection();
		Statement stmt = Banco.getStatement(conn);
		ResultSet resultado = null;

		String query = "SELECT idusuario, nome, cpf, email, " + "datanascimento" + " FROM usuario"
				+ " WHERE login like '" + usuarioVo.getLogin() + "'" + " AND senha like '" +  usuarioVo.getSenha()+ "'";

		try {
			resultado = stmt.executeQuery(query);
			if (resultado.next()) {
				usuarioVo.setIdUsuario(Integer.parseInt(resultado.getString(1)));
				usuarioVo.setNome(resultado.getString(2));
				usuarioVo.setCpf(resultado.getString(3));
				usuarioVo.setEmail(resultado.getString(4));
				usuarioVo.setDatanascimento(LocalDate.parse(resultado.getString(5)));
			}
		} catch (SQLException erro) {
			System.out.println("Erro ao executar a query no m√©todo realizarLoginUsuarioDAO!");
			System.out.println("Erro: " + erro.getMessage());
		} finally {
			Banco.closeStatement(stmt);
			Banco.closeConnection(conn);
		}
		return usuarioVo;
	}
	
	
	public boolean verificarCadastroUsuarioBaseDadosDAO(UsuarioVO usuarioVO) {
		Connection conn = Banco.getConnection();
		Statement stmt = Banco.getStatement(conn);
		ResultSet resultado= null;
		boolean retorno = false;
		
		String query ="SELECT cpf FROM usuario WHERE  cpf = '"+ usuarioVO.getCpf()+"' ";
		try {
			resultado = stmt.executeQuery(query);
			if(resultado.next()){
				retorno = true;
			}
		}catch(SQLException erro) {
			System.out.println("\nErro ao executar a query do metodo verificarCadastroUsuarioBaseDadosDAO!");
			System.out.println("Erro: " + erro.getMessage());
		}finally {
			Banco.closeResultSet(resultado);
			Banco.closeStatement(stmt);
			Banco.closeConnection(conn);
		}
		return retorno;
	}
	// insert
	public UsuarioVO cadastrarUsuarioDao(UsuarioVO usuarioVO) {
		String quary = "INSERT INTO usuario (nome, cpf, email, datanascimento, login, senha) VALUES(?, ?, ?, ?, ?, ?)";
		Connection conn = Banco.getConnection();
		PreparedStatement pstmt= Banco.getPreparedStatementWithPk(conn, quary);
		try {
			pstmt.setString(1,usuarioVO.getNome());
			pstmt.setString(2,usuarioVO.getCpf());
			pstmt.setString(3,usuarioVO.getEmail());
			pstmt.setObject(4,usuarioVO.getDatanascimento());
			pstmt.setString(5,usuarioVO.getLogin());
			pstmt.setString(6,usuarioVO.getSenha());
			pstmt.execute();
			ResultSet resultado = pstmt.getGeneratedKeys();
			if(resultado.next()) {
				usuarioVO.setIdUsuario(resultado.getInt(1));
			}
		}catch(SQLException erro){
			System.out.println("\nErro ao executar a query do metodo cadastarUsuarioDAO!");
			System.out.println("Erro: " + erro.getMessage());
		}finally {
			Banco.closePreparedStatement(pstmt);
			Banco.closeConnection(conn);
		}
		return usuarioVO;
	}

// UPDATE E DELETE
	
	public boolean atualizarUsuarioDAO(UsuarioVO usuarioVO) {
		Connection conn= Banco.getConnection();
		Statement stmt = Banco.getStatement(conn);
		boolean retorno= false;
		String query ="UPDATE usuario SET nome ='"+usuarioVO.getNome()+
				"', cpf="+usuarioVO.getCpf()+"', email="+usuarioVO.getEmail()+
				"', data nascimento="+usuarioVO.getDatanascimento()+
				"', login"+ usuarioVO.getLogin()+"', senha="+usuarioVO.getSenha()+
				"WHERE idusuario ="+usuarioVO.getIdUsuario();
		
		try {
			if(stmt.executeUpdate(query)==1) {
				retorno=true;
			}
		}catch (SQLException erro) {
			System.out.println("\nErro ao executar a query do metodo cadastarUsuarioDAO!");
			System.out.println("Erro: " + erro.getMessage());
		}finally {
			Banco.closeStatement(stmt);
			Banco.closeConnection(conn);
		}
		return retorno;
	}
	
	public boolean excluirUsuarioDAO(UsuarioVO usuarioVO) {
		Connection conn= Banco.getConnection();
		Statement stmt = Banco.getStatement(conn);
		boolean retorno=false;
		String query ="DELETE FROM usuario WHERE idusuario ="+usuarioVO.getIdUsuario();
		try {
			if(stmt.executeUpdate(query)==1) {
				retorno = true;
			}
		}catch(SQLException erro) {
			System.out.println("\nErro ao executar a query do metodo excluirUsuarioDAO!");
			System.out.println("Erro: " + erro.getMessage());
		}finally {
			Banco.closeStatement(stmt);
			Banco.closeConnection(conn);
		}
		
		return retorno;
	}
	
	//select
	public UsuarioVO consultarUsuarioDAO(UsuarioVO usuarioVO) {
		Connection conn=Banco.getConnection();
		Statement stmt = Banco.getStatement(conn);
		
		ResultSet resultado = null;
		UsuarioVO usuario = new UsuarioVO();
		String query = "SELECT idusuario, nome, cpf, email, datnascimento, login, senha"+
		"FROM usuario"+"WHERE idusuario ="+usuario.getIdUsuario();
		try {
			resultado =stmt.executeQuery(query);
			if(resultado.next()) {
				usuario.setIdUsuario(Integer.parseInt(resultado.getString(1)));
				usuario.setNome(resultado.getString(2));
			}
		}catch(SQLException erro) {
			System.out.println("\nErro ao executar a query do metodo consultarUsuarioDAO!");
			System.out.println("Erro: " + erro.getMessage());
		}finally {
			Banco.closeResultSet(resultado);
			Banco.closeStatement(stmt);
			Banco.closeConnection(conn);
		}
		return usuario;
	}
	
	public ArrayList<UsuarioVO> consultarTodosUsuariosDAO(){
		Connection conn= Banco.getConnection();
		Statement stmt=Banco.getStatement(conn);
		
		ResultSet resultado = null;
		ArrayList<UsuarioVO> listaUsuario = new ArrayList<UsuarioVO>();
		String query = "SELECT idusuario nome, cpf, email, datanascimento, login, senha";
		
		try {
			resultado = stmt.executeQuery(query);
			while(resultado.next()) {
				UsuarioVO usuario = new UsuarioVO();
				usuario.setIdUsuario(Integer.parseInt(resultado.getString(1)));
				usuario.setCpf(resultado.getString(2));
				usuario.setEmail(resultado.getString(3));
				usuario.setDatanascimento(LocalDate.parse(resultado.getString(4)));
				usuario.setLogin(resultado.getString(5));
				usuario.setSenha(resultado.getString(6));
				
			}
		}catch(SQLException erro) {
			System.out.println("\nErro ao executar a query do metodo consultarTodosUsuarioDAO!");
			System.out.println("Erro: " + erro.getMessage());
		}finally {
			Banco.closeResultSet(resultado);
			Banco.closeStatement(stmt);
			Banco.closeConnection(conn);
		}
		return listaUsuario;
	}
	
	
}
