DROP DATABASE IF EXISTS DBCOTACAO;
CREATE DATABASE DBCOTACAO;
USE DBCOTACAO;

CREATE TABLE PRODUTO (
IDPRODUTO INT NOT NULL AUTO_INCREMENT
    , NOME VARCHAR(45)
    , VALOR_REAL NUMERIC(8,2)
    , VALOR_DOLAR NUMERIC(8,2)
    , VALOR_EURO  NUMERIC(8,2)
    , PRIMARY KEY(IDPRODUTO)
);

DELIMITER $$

CREATE TRIGGER TR_PRODUTO_BI BEFORE INSERT ON PRODUTO FOR EACH ROW
BEGIN

	DECLARE vREAL NUMERIC(8,2);
    DECLARE vDOLAR NUMERIC(8,2);
    DECLARE vEURO NUMERIC(8,2);
	
    
    IF (NEW.VALOR_REAL IS NOT NULL) AND (NEW.VALOR_DOLAR IS NULL) AND (NEW.VALOR_EURO IS NULL) THEN
    
		SET vDOLAR = 3.9005;
		SET vEURO = 4.3684;
		SET vREAL = NEW.VALOR_REAL;
		SET NEW.VALOR_DOLAR = vREAL * vDOLAR;
		SET NEW.VALOR_EURO = vREAL * vEURO;
        
	ELSEIF (NEW.VALOR_DOLAR IS NOT NULL) AND (NEW.VALOR_REAL IS NULL) AND (NEW.VALOR_EURO IS NULL) THEN
    
		SET vDOLAR = NEW.VALOR_DOLAR;
        SET vREAL = vDOLAR / 3.9005;
        SET vEURO = vREAL * 4.3684;
		SET NEW.VALOR_REAL = vREAL;
		SET NEW.VALOR_EURO = vEURO;
        
     ELSEIF (NEW.VALOR_EURO IS NOT NULL) AND (NEW.VALOR_DOLAR IS NULL) AND (NEW.VALOR_REAL IS NULL) THEN
    
		SET vEURO = NEW.VALOR_EURO;
        SET vREAL = vEURO / 4.3684;
        SET vDOLAR = vREAL * 3.9005;
		SET NEW.VALOR_REAL = vREAL;
		SET NEW.VALOR_DOLAR = vDOLAR;
        
    ELSEIF (NEW.VALOR_EURO IS NULL) AND (NEW.VALOR_REAL IS NULL) AND (NEW.VALOR_DOLAR IS NULL) THEN
    
		SIGNAL SQLSTATE '45000' 
        SET MESSAGE_TEXT = 'É NECESSÁRIO INFORMAR UM VALOR PARA O PRODUTO';
        
	ELSEIF (NEW.VALOR_REAL <>  NEW.VALOR_DOLAR / 3.9005) THEN
		SIGNAL SQLSTATE '45000' 
        SET MESSAGE_TEXT = 'OS VALORES NÃO CORRESPONDEM';
    END IF;
END $$

CREATE TRIGGER TR_PRODUTO_BU BEFORE UPDATE ON PRODUTO FOR EACH ROW
BEGIN

	DECLARE vREAL2 NUMERIC(8,2);
    DECLARE vDOLAR2 NUMERIC(8,2);
    DECLARE vEURO2 NUMERIC(8,2);
	
    
    IF (NEW.VALOR_REAL <> OLD.VALOR_REAL) THEN
		SET vDOLAR2 = 3.9005;
		SET vEURO2 = 4.3684;
		SET vREAL2 = NEW.VALOR_REAL;
		SET NEW.VALOR_DOLAR = vREAL2 * vDOLAR2;
		SET NEW.VALOR_EURO = vREAL2 * vEURO2;
    
        
	ELSEIF (NEW.VALOR_DOLAR <> OLD.VALOR_DOLAR) THEN
    
		SET vDOLAR2 = NEW.VALOR_DOLAR;
        SET vREAL2 = vDOLAR2 / 3.9005;
        SET vEURO2 = vREAL2 * 4.3684;
		SET NEW.VALOR_REAL = vREAL2;
		SET NEW.VALOR_EURO = vEURO2;
        
     ELSEIF (NEW.VALOR_EURO <> OLD.VALOR_EURO) THEN
    
		SET vEURO2 = NEW.VALOR_EURO;
        SET vREAL2 = vEURO2 / 4.3684;
        SET vDOLAR2 = vREAL2 * 3.9005;
		SET NEW.VALOR_REAL = vREAL2;
		SET NEW.VALOR_DOLAR = vDOLAR2;
        
   
     END IF;
END $$
DELIMITER ;

INSERT INTO PRODUTO (IDPRODUTO, NOME, VALOR_REAL) VALUES (1, 'REAL', 10);
INSERT INTO PRODUTO (IDPRODUTO, NOME, VALOR_DOLAR) VALUES (2,'DOLAR', 39);
INSERT INTO PRODUTO (IDPRODUTO, NOME, VALOR_EURO) VALUES (3,'EURO', 43.70);
INSERT INTO PRODUTO (IDPRODUTO,NOME) VALUES (4, 'VAZIO');
INSERT INTO PRODUTO (IDPRODUTO,NOME, VALOR_REAL, VALOR_DOLAR) VALUES (5, 'NAOCORRESPONDE', 10, 5);
INSERT INTO PRODUTO (IDPRODUTO, NOME, VALOR_DOLAR) VALUES (6,'DOLAR2', 13);
INSERT INTO PRODUTO (IDPRODUTO, NOME, VALOR_EURO) VALUES (7,'EURO2', 28);
SELECT * FROM PRODUTO;

UPDATE PRODUTO SET VALOR_REAL = 20 WHERE IDPRODUTO = 1;
UPDATE PRODUTO SET VALOR_DOLAR = 30 WHERE IDPRODUTO = 2;
UPDATE PRODUTO SET VALOR_EURO = 20 WHERE IDPRODUTO = 3;
UPDATE PRODUTO SET VALOR_EURO = 5 WHERE IDPRODUTO = 7;
UPDATE PRODUTO SET VALOR_DOLAR = 15 WHERE IDPRODUTO = 6;

SELECT * FROM PRODUTO;
/*
QUESTÃO:
1. QUANDO UM PRODUTO FOR INCLUÍDO OU ALTERADO O VALOR DO PRODUTO 
EM DÓLAR E EURO DEVE SER CALCULADO

Valor para conversão 1 Real = 3,9005 Dólar
Valor para conversão 1 Real = 4,3684 Euro
*/